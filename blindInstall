#!/bin/bash

# this script is part of an autoInstall archive which installs SetupHelper
#	previous versions of blindInstall also installed GuiMods but has since been removed
# 	since PackageManager will install all package archives found on the SD/USB media so 
#	the result is the same (or actually better)
#
# the archive makes use of the Venus OS update-data.sh script
# archives named "venus-data.tar.gz" are unpacked during boot
# overriting content in /data
#
# the archive unpacks to /data/SetupHelper-blind
# then blindInstall compares versions between /data/SetupHelper-blind anc /data/SetupHelper
# if blind is NEWER, SetupHelper-blind replaces SetupHelper, and the setup script is run
#
# for this archive, Venus must be rebooted a second time, causing this speial rcS.local to run,
# which calls blindInstall as a background task.
#
# a call to /data/SetupHelper/reinstallMods is appended to rcS.local by all setup scripts
# using SetupHelper CommonResources.
# That call is included in the blind install rcS.local so that if the media is left inserted
#	subsequent reboots will still check for reinstalls
#
# the rcS.local from the blindInstall is removed when SetupHelper/setup is run to keep things clean
#	SetupHelper/setup creates a new one
#
# the blindInstall script is run in the background so it can wait for dbus Settings resources
# to become available before running the package install scripts.
#

source "/data/SetupHelper-blind/EssentialResources"
source "/data/SetupHelper-blind/LogHandler"

# wait until dbus settings are active
while [ $(dbus -y | grep -c "com.victronenergy.settings") == 0 ]; do
    logMessage "waiting for dBus settings"
    sleep 1
done

sleep 2

setupHelperBlind='/data/SetupHelper-blind'
setupHelperInstalled='/data/SetupHelper'

runSetup=false
if [ -d "$setupHelperBlind" ]; then
	# compare versions
	if [ -d "$setupHelperInstalled" ]; then
		if [ -f "$setupHelperBlind/version" ]; then
			versionStringToNumber $(cat "$setupHelperBlind/version")
			blindVersion=$versionNumber
		else
			blindVersion=0
		fi
		if [ -f "$setupHelperInstalled/version" ]; then
			versionStringToNumber $(cat "$setupHelperInstalled/version")
			packageVersion=$versionNumber
		else
			packageVersion=0
		fi
		if (( blindVersion > packageVersion )); then
			runSetup=true
		fi
	else
		runSetup=true
	fi
fi

# get rid of the blind install rcS.local so it can't run again
# (unless the archive still exists on the media on next boot)
# SetupHelper/setup will install the proper one
rm -f /data/rcS.local

if $runSetup ; then
	logMessage "blind install SetupHelper"

	# replace SetupHelper with the one from the archive
	rm -rf "$setupHelperInstalled"
	mv "$setupHelperBlind" "$setupHelperInstalled"

	# run the setup script
	"$setupHelperInstalled/setup" reinstall
# remove SetupHelper from archive - it wasn't newer
else
	logMessage "blind install did NOT update SetupHelper (probably an older version)"
	rm -rf "$setupHelperBlind"
fi
